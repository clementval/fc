// Copyright (c) 2019, Compiler Tree Technologies Pvt Ltd.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// 1. Redistributions of source code must retain the above copyright notice, this
//    list of conditions and the following disclaimer.
//
// 2. Redistributions in binary form must reproduce the above copyright notice,
//    this list of conditions and the following disclaimer in the documentation
//    and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
// CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
// OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#ifndef STMT
#define STMT(X)
#endif

#ifndef EXPR
#define EXPR(X) STMT(X)
#endif

#ifndef BLOCK
#define BLOCK(X) STMT(X)
#endif

// Action statements.
STMT(AssignmentStmt)
STMT(StopStmt)
STMT(PrintStmt)
STMT(IfElseStmt)
STMT(IfStmt)
STMT(WhereStmt)
STMT(WhereConstruct)
STMT(DoWhileStmt)
STMT(DoStmt)
STMT(CallStmt)
STMT(ReadStmt)
STMT(WriteStmt)
STMT(OpenStmt)
STMT(CloseStmt)
STMT(AllocateStmt)
STMT(DeAllocateStmt)
STMT(UseStmt)
STMT(EntityDecl)
STMT(DeclarationTypeSpec)
STMT(CaseStmt)
STMT(SelectCaseStmt)
STMT(CycleStmt)
STMT(ExitStmt)
STMT(ForAllStmt)
STMT(PointerAssignmentStmt)
STMT(NullifyStmt)

// Block node which contains multiple statements.
BLOCK(Block)

// Expressions.
EXPR(ConstantVal)
EXPR(ArrayConstructor)
EXPR(FunctionReference)
EXPR(BinaryExpr)
EXPR(RelationalExpr)
EXPR(LogicalExpr)
EXPR(RangeExpr)
EXPR(QuadExpr)
EXPR(ObjectName)
EXPR(ArrayElement)
EXPR(ArraySection)
EXPR(StructureComponent)
EXPR(ArraySpec)
EXPR(ACSpec)
EXPR(AssignmentExpr)
EXPR(ReturnStmt)
EXPR(Format)
EXPR(IOImpliedDo)
EXPR(CastExpr)

#ifdef STMT
#undef STMT
#endif

#ifdef EXPR
#undef EXPR
#endif

#ifdef BLOCK
#undef BLOCK
#endif
